# Telegraf Configuration
#
# Telegraf is entirely plugin driven. All metrics are gathered from the
# declared inputs, and sent to the declared outputs.
#
# Plugins must be declared in here to be active.
# To deactivate a plugin, comment out the name and any variables.
#
# Use 'telegraf -config telegraf.conf -test' to see what metrics a config
# file would generate.
#
# Environment variables can be used anywhere in this config file, simply surround
# them with ${}. For strings the variable must be within quotes (ie, "${STR_VAR}"),
# for numbers and booleans they should be plain (ie, ${INT_VAR}, ${BOOL_VAR})

# Global tags can be specified here in key="value" format.
[global_tags]

# Configuration for telegraf agent
[agent]
  interval = "5s"
  round_interval = true

  metric_batch_size = 1000

  metric_buffer_limit = 10000

  collection_jitter = "0s"

  flush_interval = "10s"
  flush_jitter = "0s"

  precision = ""

  debug = false
  quiet = false

  hostname = ""
  omit_hostname = true

###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################


[[outputs.influxdb]]
	urls = ["http://influxdb:8086"]
	database = "telegraf"
	write_consistency = "any"
	timeout = "60s"
	insecure_skip_verify = false
	username = "admin"
	password = "admin"

###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

[[inputs.docker]]
    #   ## Docker Endpoint
    #   ##   To use TCP, set endpoint = "tcp://[ip]:[port]"
    #   ##   To use environment variables (ie, docker-machine), set endpoint = "ENV"
  endpoint = "unix:///var/run/docker.sock"
    #
    #   ## Set to true to collect Swarm metrics(desired_replicas, running_replicas)
  gather_services = false
    #
    #   ## Only collect metrics for these containers, collect all if empty
  container_names = []
    #
    #   ## Set the source tag for the metrics to the container ID hostname, eg first 12 chars
  source_tag = false
    #
    #   ## Containers to include and exclude. Globs accepted.
    #   ## Note that an empty array for both will include all containers
  container_name_include = []
  container_name_exclude = []
    #
    #   ## Container states to include and exclude. Globs accepted.
    #   ## When empty only containers in the "running" state will be captured.
    #   ## example: container_state_include = ["created", "restarting", "running", "removing", "paused", "exited", "dead"]
    #   ## example: container_state_exclude = ["created", "restarting", "running", "removing", "paused", "exited", "dead"]
    #   container_state_include = []
    #   # container_state_exclude = []
    #
    #   ## Timeout for docker list, info, and stats commands
    #   timeout = "5s"
    #
    #   ## Whether to report for each container per-device blkio (8:0, 8:1...) and
    #   ## network (eth0, eth1, ...) stats or not
  perdevice = true
    #
    #   ## Whether to report for each container total blkio and network stats or not
  total = false
    #
    #   ## Which environment variables should we use as a tag
    #   ##tag_env = ["JAVA_HOME", "HEAP_SIZE"]
    #
    #   ## docker labels to include and exclude as tags.  Globs accepted.
    #   ## Note that an empty array for both will include all labels as tags
  docker_label_include = []
  docker_label_exclude = []
    #

[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false

[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]

[[inputs.diskio]]

[[inputs.kernel]]

[[inputs.mem]]

[[inputs.processes]]

[[inputs.swap]]

[[inputs.system]]

